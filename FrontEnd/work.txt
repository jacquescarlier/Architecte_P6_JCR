
constantes et variables	{}	2 à 44
getWorks (fetch){}		    49 à 57		obtenir les travaux
getCategories (fetch){}	    61 à 64		obtenir les catégories
workByCategory	{		    66 à 94  	travail par catégories
	
	createButtons {}	    69 à 81		création des boutons de trie
	creationDropdownList {} 83 à 92		création de la liste déroulante
		}

addNewProject {}		    98 à 120	création d'un travail (projet)
buildWorks {			    124 à 172	construire les travaux (projets)
appel des fonctions createWork, createWorksForModalGallery, createFilter.
	 trash.function (e){	137 à 169
		deleteProject {}	141 à 168	effacement des projets
			}
	}
createWork	{}		        176 à 186	fonction pour créer la galerie
createWorksForModalGallery{}188 à 198	pour créer la galerie de la modale
addNewWorkGallery	{}	    200 à 208	ajouter un projet à la galerie
addNewWorkInModal	{}	    210 à 217	ajouter un projet à la modale
createFilter 		{}	    221 à 237	création des filtres
displayFilter		{}	    241 à 253	affichage des filtres
element according token     257 à 273	Modification d"élément en fonction du token
logInLogOut	{}		        282 à 289	gestion du bouton login/logout

toggleModal	{}		        304 à 311   ouverture fermeture modal 1
howToCloseModal			    314 à 320   condition de fermeture des modales
toggleModal2 {}			    326 à 333   ouverture fermeture modal 2
buttonAddPhotos	{}		    336 à 339   ouverture modal2
previousArrow {}		    341 à 348   flèche retour sur modal 1
 input file part		    350 à 352   partie sur l'inputfile
constante pour formdata		355 à 359   constantes pour la form

errorMessageRemove	{}	    361 à 364   enlève le message d'erreur
infoFileNotOk		{}	    366 à 370   fichier pas valide lors de la sélection
previewNewWork		{}	    371 à 388   fonction pour prévisualisation du nouveau projet
imageDisplay		{}	    390 à 400   affiche l'image dans le preview
validateContentForm	{}	    405 à 416   validation du contenu des différents éléments de la form
sendNewWork		{	        419 à 462   fonction pour l'envoie du nouveau projet à la base de donnée de l'API
	fetch 	{}		        425 à 431   fetch pour l'envoie
	.then	{}		        432 à 461   condition en fonction de la répose du fetch
			}
buttonValidatePhoto	{}	    464 à 466   bouton pour valider l'envoie du nouveau projet
resetContainerAddPhoto	{}	469 à 483   remise à zéro du container  qui contient la photo et la form
